#include <iostream>
using namespace std;

class node              //Each node contains the link to the next node and some data variables. 
{
public:
    int data;
    node *next;

    node(int val)
    {
        data = val;
        next = NULL;
    }
};

void insertAtTail(node* &head, int val)
{
    node *n = new node(val);          //return type is node

    if (head == NULL)
    {
        head = n;
        return;
    }
    node* temp = head;
    while (temp->next != NULL)
    {
        temp = temp->next;
    }
    temp->next = n;
}

void insertAtHead(node *&head, int val)
{ //taking head ka reference and jo value add krna hai
    node *n = new node(val);
    n->next = head;
    head = n;
}

bool search(node *head, int key)       //linear search on linked List
{
    node *temp = head;
    while (temp != NULL)
    {
        if (temp->data == key)
        {
            ;
            return true;
        }
        temp = temp->next;
    }
    return false;
}

void display(node *head){ //head is taken by value not by reference because we are not modifing the list
    node *temp = head;
    while (temp != NULL)
    {
        cout << temp->data << "->";
        temp = temp->next;
    }
    cout << "NULL" << endl;
}

int main()
{
    node *head = NULL;
    insertAtTail(head, 1);
    insertAtTail(head, 13);
    insertAtTail(head, 12);
    insertAtTail(head, 21);
    display(head);

    insertAtHead(head, 2);
    display(head);
    cout << search(head, 5) << endl;

    return 0;
}
______________________________________________________________________________________________
*****************Output***********
1->13->12->21->NULL
2->1->13->12->21->NULL
0
